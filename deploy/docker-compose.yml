services:
  db:
    image: postgres:16
    environment:
      POSTGRES_DB: linkcrm
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - linkcrm_pg:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d linkcrm"]
      interval: 10s
      timeout: 5s
      retries: 10
    restart: unless-stopped
    networks:
      - dokploy

  web:
    build:
      context: ../api
      dockerfile: Dockerfile
    environment:
      ENV: ${ENV:-production}
      APP_HOST: ${APP_HOST:-0.0.0.0}
      APP_PORT: ${APP_PORT:-8000}
      SERVER_URL: ${SERVER_URL}
      DATABASE_URL: ${DATABASE_URL:-postgresql+psycopg://postgres:postgres@db:5432/linkcrm}
      SQL_ECHO: ${SQL_ECHO:-false}
      SECRET_KEY: ${SECRET_KEY}
      SESSION_COOKIE_NAME: ${SESSION_COOKIE_NAME:-session}
      SESSION_EXPIRES_DAYS: ${SESSION_EXPIRES_DAYS:-30}
      SMTP_HOST: ${SMTP_HOST}
      SMTP_PORT: ${SMTP_PORT:-587}
      SMTP_USER: ${SMTP_USER}
      SMTP_PASS: ${SMTP_PASS}
      SMTP_FROM: ${SMTP_FROM}
      LEMONSQUEEZY_WEBHOOK_SECRET: ${LEMONSQUEEZY_WEBHOOK_SECRET}
      LEMONSQUEEZY_CHECKOUT_STARTER: ${LEMONSQUEEZY_CHECKOUT_STARTER}
      LEMONSQUEEZY_CHECKOUT_PRO: ${LEMONSQUEEZY_CHECKOUT_PRO}
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "-qO", "-", "http://localhost:8000/health"]
      interval: 15s
      timeout: 3s
      retries: 5
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.linkcrm.rule=Host(`app.example.com`)"
      - "traefik.http.routers.linkcrm.entrypoints=websecure"
      - "traefik.http.routers.linkcrm.tls=true"
      - "traefik.http.services.linkcrm.loadbalancer.server.port=8000"
    networks:
      - dokploy

volumes:
  linkcrm_pg:

networks:
  internal:
    external: true
    name: dokploy
